{"version":3,"sources":["../../src/rules/newlineAfterDescription.js"],"names":["jsdoc","report","context","always","description","tags","length","has","options","descriptionEndsWithANewline","startsWith","source","slice"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe,4BAAa,gBAItB;AAAA,MAHJA,KAGI,QAHJA,KAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,OACI,QADJA,OACI;;AACJ,MAAIC,eAAJ;;AAEA,MAAI,CAACH,MAAMI,WAAP,IAAsB,CAACJ,MAAMK,IAAN,CAAWC,MAAtC,EAA8C;AAC5C;AACD;;AAED,MAAI,iBAAEC,GAAF,CAAML,QAAQM,OAAd,EAAuB,CAAvB,CAAJ,EAA+B;AAC7BL,aAASD,QAAQM,OAAR,CAAgB,CAAhB,MAAuB,QAAhC;AACD,GAFD,MAEO;AACLL,aAAS,IAAT;AACD;;AAED;AACA;AACA;AACA,MAAMM,8BAA8B,iBAAEC,UAAF,CAAaV,MAAMW,MAAN,CAAaC,KAAb,CAAmBZ,MAAMI,WAAN,CAAkBE,MAArC,CAAb,EAA2D,MAA3D,CAApC;;AAEA,MAAIH,MAAJ,EAAY;AACV,QAAI,CAACM,2BAAL,EAAkC;AAChCR,aAAO,mEAAP;AACD;AACF,GAJD,MAIO,IAAIQ,2BAAJ,EAAiC;AACtCR,WAAO,oEAAP;AACD;AACF,CA7Bc,C","file":"newlineAfterDescription.js","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n  context\n}) => {\n  let always;\n\n  if (!jsdoc.description || !jsdoc.tags.length) {\n    return;\n  }\n\n  if (_.has(context.options, 0)) {\n    always = context.options[0] === 'always';\n  } else {\n    always = true;\n  }\n\n  // The contents of the jsdoc.source and of jsdoc.description is left trimmed.\n  // The contents of the jsdoc.description is right trimmed.\n  // This gets the text following the description.\n  const descriptionEndsWithANewline = _.startsWith(jsdoc.source.slice(jsdoc.description.length), '\\n\\n');\n\n  if (always) {\n    if (!descriptionEndsWithANewline) {\n      report('There must be a newline after the description of the JSDoc block.');\n    }\n  } else if (descriptionEndsWithANewline) {\n    report('There must be no newline after the description of the JSDoc block.');\n  }\n});\n"]}